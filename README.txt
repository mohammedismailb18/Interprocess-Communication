*******************************************************************************************************
# PROBLEM STATEMENT					
_______________________________________________________________________________________________________

Temperature Controller – Using named and unnamed pipes

Consider three processes P1, P2, and P3 in an IoT architecture. The process P1 reads the temperature
setting from the thermostats installed in a factory from five different locations, viz., L1, L2, L3, L4,
and L5. The recorded temperature should be in the range 15 deg Celsius to 45 deg Celsius. Process P1 collects
and sends the data (user inputtemperature data) to Process P2. Process P2 calculates the average and the standard
deviation of the recorded temperatures and send to Process P3. Process P3 analyses the temperatures with the 
average (avg) and std. deviation (sd) and performs the following:
- If the location temperature is equal to avg, the location is categorized as Cat0
- If the location temperature is greater than avg+sd, the location is categorized as Cat1
- If the location temperature is greater than avg but less than avg+sd, the location is categorized as Cat2
- If the location temperature is less than avg but greater than avg – sd, the location
is categorized as Cat3

- If the location temperature is less than avg – sd, the location is categorized as Cat4 The Process P3 then sends the category of each 
location to Process P1. The Process P1 then actuates the thermostat temperature as per the rules as follows:
- Cat0: Temperature setting remains the same.
- Cat1: Temperature setting is reduced by 3 deg.
- Cat2: Temperature setting is reduced by 1.5 deg.
- Cat3: Temperature setting is increased by 2 deg.
- Cat4: Temperature setting is increased by 2.5 deg.

The Process P1 then prints the revised temperature at each of the locations.


*******************************************************************************************************
# HOW TO RUN THE PROGRAM					
_______________________________________________________________________________________________________


question 1 has two programs p1p2.c and p3.c

-> open two terminals from the directory containing these two programs.

-> In first terminal enter the command for compiling p1p2.c and create an executable file named 'first' : 
		gcc p1p2.c -o first -lm

-> In second terminal enter the command for compiling p3.c and create and executable file name 'second' :
		gcc p3.c -o second
		
-> To run the executable file run the commands in the appropriate terminals:
	./first
	./second

-> Now terminal 1 asks for temperature values, enter the 5 temperature values in the range of 15 to 45 
   degree celcius.Now the revised temperature will be printed in terminal 1 and the program execution in
   terminal 2 will end automatically.
   
   
*********************************************************************************************************
# WORKING OF THE PROGRAM
_________________________________________________________________________________________________________


-> The program p1p2.c generates two process P1 and P2 where P1 is the parent process and P2, the child 
   process, is generated by using a fork() system call.

-> Now process P1 and P2 starts executing parallely. P1 takes the 5 temperature values given by the user
   into an array.

-> P1 and P2 communicate through an unnamed pipe. P1 sends the temperature values to the process P2 to one
   end of pipe by a write() function call which takes the parameters file descriptor fd[1], buffer pointer,
   5*sizeof(float) as it's no.of bytes.

-> Now process P2 recieves this message from the other end of the pipe by using the read() function call. 
   Process P2 stores these temperature values into an array of size 5. Then process P2 calculates the mean
   and standard deviation of these temperature by using the user defined function average() and fun_std(). 

-> The values calculated by process P2 send to process P3 which is an independent process generated by the 
   program p3.c through a named pipe. Process P2 use a fifo file named 'file1' for this purpose. 
   
-> The process P3 recieves the message from process p2 by reading at one end of this fifo file. Also process P1
   sends the temperature data to process P3 using another named pipe 'file2'.Now process P3 analyse the values of 
   mean and standard deviation with tempearature values for categorising the temperature into cat0, cat1, cat2, 
   cat3, cat4 and cat5.The category number of T1,T2,T3,T4 and T5 are stored in an array cat.Now message containg 
   this values are passed to process P1 throgh the named pipe file2. Then Process P1 will print the revised temperature
   and the process terminated.


